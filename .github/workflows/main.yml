name: PCGMZ

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 4680

    steps:
      - name: Disable Sleep / Hibernate / PowerSave
        shell: powershell
        run: |
          powercfg /change standby-timeout-ac 0
          powercfg /change monitor-timeout-ac 0
          powercfg /hibernate off
          powercfg /setactive SCHEME_MIN
          echo "‚úÖ Power save disabled"

      - name: Optimize TCP Stack + QoS Gaming
        shell: powershell
        run: |
          netsh interface tcp set heuristics disabled
          netsh interface tcp set global autotuninglevel=normal
          netsh interface tcp set global rss=enabled
          netsh interface tcp set global chimney=disabled
          netsh interface tcp set global ecncapability=enabled
          echo "‚úÖ TCP QoS Gaming Optimized"

      - name: Optimize Keepalive
        shell: powershell
        run: |
          New-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name 'KeepAliveEnable' -Value 1 -PropertyType DWord -Force
          New-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters' -Name 'KeepAliveTime' -Value 30000 -PropertyType DWord -Force
          echo "‚úÖ RDP KeepAlive Enabled"

      - name: Configure Core RDP
        shell: powershell
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0 -Force
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Restart-Service TermService -Force
          echo "‚úÖ RDP Enabled"

      - name: Anti Idle + Timeout
        shell: powershell
        run: |
          New-Item -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services' -ErrorAction SilentlyContinue
          New-ItemProperty -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services' -Name 'MaxIdleTime' -Value 0 -PropertyType DWord -Force
          New-ItemProperty -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services' -Name 'fResetBroken' -Value 1 -PropertyType DWord -Force
          echo "‚úÖ Anti Idle Activated"

      - name: Create RDP User
        shell: powershell
        run: |
          $chars = ([char[]](33..126))
          $password = -join ($chars | Get-Random -Count 14)
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          if (-not (Get-LocalUser -Name "PCGMZ" -ErrorAction SilentlyContinue)) {
              New-LocalUser -Name "PCGMZ" -Password $securePass -AccountNeverExpires
          }
          Add-LocalGroupMember -Group "Administrators" -Member "PCGMZ"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "PCGMZ"
          echo "RDP_USER=PCGMZ" >> $env:GITHUB_ENV
          echo "RDP_PASS=$password" >> $env:GITHUB_ENV
          echo "‚úÖ Created RDP user: PCGMZ"

      - name: Install Tailscale
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://pkgs.tailscale.com/stable/tailscale-setup-latest.exe" -OutFile tailscale.exe
          Start-Process tailscale.exe -ArgumentList "/quiet" -Wait
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey "${{ secrets.TAILSCALE_AUTH_KEY }}" --hostname "PCGMZ-${{ github.run_id }}" --ssh
          $tsip = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4).Trim()
          echo "TS_IP=$tsip" >> $env:GITHUB_ENV
          echo "‚úÖ Tailscale connected: $tsip"

      - name: Firewall Restrict (Tailscale Only)
        shell: powershell
        run: |
          Get-NetFirewallRule -DisplayName "Remote Desktop*" -ErrorAction SilentlyContinue | Disable-NetFirewallRule
          New-NetFirewallRule -DisplayName "Allow-RDP-Tailscale" -Direction Inbound -Protocol TCP -LocalPort 3389 -Action Allow -RemoteAddress "100.64.0.0/10"
          echo "‚úÖ Firewall secured to Tailscale only"

      - name: Install Sunshine (Moonlight host)
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://github.com/LizardByte/Sunshine/releases/latest/download/SunshineSetup.exe" -OutFile SunshineSetup.exe
          Start-Process SunshineSetup.exe -ArgumentList "/silent" -Wait
          Set-Service Sunshine -StartupType Automatic
          Start-Service Sunshine
          echo "‚úÖ Sunshine Installed"

      - name: Configure Sunshine Firewall
        shell: powershell
        run: |
          New-NetFirewallRule -DisplayName "Sunshine TCP" -Direction Inbound -Protocol TCP -LocalPort 47984,47989,47990,48010 -Action Allow -RemoteAddress "100.64.0.0/10"
          New-NetFirewallRule -DisplayName "Sunshine UDP" -Direction Inbound -Protocol UDP -LocalPort 47998-48010 -Action Allow -RemoteAddress "100.64.0.0/10"
          echo "‚úÖ Sunshine Firewall Configured"

      - name: Sunshine Config
        shell: powershell
        run: |
          $path = "$env:ProgramData\Sunshine\config.json"
          $json = @{
            webui = @{ enable = $true; port = 47990; require_auth = $true }
            users = @(@{ name = "PCGMZ"; password = "PCGMZ_secure_pw" })
            encoder = @{
              preferred = "nvenc"
              nvenc = @{ preset = "p1"; bitrate = 30000; maxbps = 50000000; low_latency = $true; max_framerate = 60 }
            }
            apps = @(
              @{ name = "Steam"; cmd = "C:\Program Files (x86)\Steam\Steam.exe" },
              @{ name = "Desktop"; cmd = "C:\Windows\explorer.exe" }
            )
          } | ConvertTo-Json -Depth 8
          $json | Out-File -FilePath $path -Encoding utf8
          Restart-Service Sunshine
          echo "‚úÖ Sunshine Config Applied"

      - name: GPU Optimizations
        shell: powershell
        run: |
          reg add "HKLM\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" /v HwSchMode /t REG_DWORD /d 2 /f
          reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" /v NetworkThrottlingIndex /t REG_DWORD /d 0xffffffff /f
          reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" /v SystemResponsiveness /t REG_DWORD /d 0 /f
          echo "‚úÖ GPU Optimization Applied"

      - name: Keep Alive
        shell: powershell
        run: |
          Write-Host "==============================="
          Write-Host "üåê PCGMZ GameStream Ready"
          Write-Host "Tailscale IP : $env:TS_IP"
          Write-Host "RDP Username : $env:RDP_USER"
          Write-Host "RDP Password : $env:RDP_PASS"
          Write-Host "Sunshine Web : http://$env:TS_IP:47990"
          Write-Host "Moonlight IP : $env:TS_IP"
          Write-Host "==============================="
          while ($true) {
            Write-Host "$(Get-Date) PCGMZ alive..."
            Start-Sleep -Seconds 300
          }
          
